load("//internal/acceptance:defs.bzl", "acceptance_test_argo_source", "acceptance_test_suite", "create_acceptance_versions_dict_file")
load(":args.bzl", "flex_runtime_versions", "gae_runtime_versions", "gcf_runtime_versions", "gcp_runtime_versions", "javaargs")

licenses(["notice"])

exports_files([
    "config.yaml",
    "args.bzl",
])

RUNTIME_TO_BUILDER_MAP = {
    "java17": "//builders/java:builder_22.tar",
    "java21": "//builders/java:builder_22.tar",
}

create_acceptance_versions_dict_file(
    name = "gen_acceptance_targets_list",
    file = "acceptance_targets.dict",
    flex_runtime_versions = flex_runtime_versions,
    gae_runtime_versions = gae_runtime_versions,
    gcf_runtime_versions = gcf_runtime_versions,
    gcp_runtime_versions = gcp_runtime_versions,
)

test_suite(
    name = "acceptance_test",
    tests = [
        "flex_test",
        "gae_test",
        "gcf_test",
        "gcp_test",
    ],
)

# Test the run image tagged as latest in gae-runtimes.
acceptance_test_suite(
    name = "gae_test",
    srcs = [
        "gae_test.go",
    ],
    argsmap = javaargs(),
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:appengine.tgz",
    versions = gae_runtime_versions,
)

# Test the run image tagged as ${_CANDIDATE_NAME} in gae-runtimes-private.
acceptance_test_suite(
    name = "gae_candidate_test",
    srcs = [
        "gae_test.go",
    ],
    argsmap = javaargs("$${_CANDIDATE_NAME}"),
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:appengine.tgz",
    versions = gae_runtime_versions,
)

acceptance_test_suite(
    name = "gae_stack_candidate_test",
    srcs = [
        "gae_test.go",
    ],
    argsmap = javaargs("$${_CANDIDATE_NAME}", "$${_STACK}"),
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:appengine.tgz",
    versions = gae_runtime_versions,
)

acceptance_test_suite(
    name = "gcf_test",
    srcs = [
        "gcf_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:functions.tgz",
    versions = gcf_runtime_versions,
)

acceptance_test_suite(
    name = "gcp_test",
    srcs = [
        "gcp_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:generic",
    versions = gcp_runtime_versions,
)

acceptance_test_suite(
    name = "flex_test",
    srcs = [
        "flex_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    runtime_to_builder_map = RUNTIME_TO_BUILDER_MAP,
    testdata = "//builders/testdata/java:flex",
    versions = flex_runtime_versions,
)

acceptance_test_argo_source(
    name = "argo_source",
    srcs = [
        "//builders/testdata/java:appengine.tgz",
        "//builders/testdata/java:functions.tgz",
    ],
    testdata = "//builders/testdata/java:all_files",
)

exports_files(["runtime.bzl"])
