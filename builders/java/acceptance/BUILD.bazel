load("//internal/acceptance:defs.bzl", "acceptance_test_argo_source", "acceptance_test_suite")
load(":args.bzl", "gae_java_runtime_versions", "javaargs")

licenses(["notice"])

exports_files([
    "config.yaml",
    "args.bzl",
])

test_suite(
    name = "acceptance_test",
    tests = [
        "flex_test",
        "gae_test",
        "gcf_test",
        "gcp_test",
    ],
)

VERSIONS_ALL = gae_java_runtime_versions

# java8 is gen1 runtime so it's not using buildpacks
VERSIONS_WITH_GAE_SUPPORT = {n: v for n, v in gae_java_runtime_versions.items() if v != "8"}

VERSION_JAVA11 = "11"

VERSION_JAVA17 = "17"

VERSION_JAVA21 = "21"

VERSIONS_WITH_FLEX_SUPPORT = {
    "java11": VERSION_JAVA11,
    "java17": VERSION_JAVA17,
    "java21": VERSION_JAVA21,
}

VERSIONS_WITH_GCF_SUPPORT = VERSIONS_WITH_GAE_SUPPORT

VERSIONS_WITH_GCP_SUPPORT = VERSIONS_ALL

# Test the run image tagged as latest in gae-runtimes.
acceptance_test_suite(
    name = "gae_test",
    srcs = [
        "gae_test.go",
    ],
    argsmap = javaargs(),
    builder = "//builders/java:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/java:appengine.tgz",
    versions = VERSIONS_WITH_GAE_SUPPORT,
)

# Test the run image tagged as ${_CANDIDATE_NAME} in gae-runtimes-private.
acceptance_test_suite(
    name = "gae_candidate_test",
    srcs = [
        "gae_test.go",
    ],
    argsmap = javaargs("$${_CANDIDATE_NAME}"),
    builder = "//builders/java:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/java:appengine.tgz",
    versions = VERSIONS_WITH_GAE_SUPPORT,
)

acceptance_test_suite(
    name = "gcf_test",
    srcs = [
        "gcf_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/java:functions.tgz",
    versions = VERSIONS_WITH_GCF_SUPPORT,
)

acceptance_test_suite(
    name = "gcp_test",
    srcs = [
        "gcp_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/java:generic",
    versions = VERSIONS_WITH_GCP_SUPPORT,
)

acceptance_test_suite(
    name = "flex_test",
    srcs = [
        "flex_test.go",
    ],
    builder = "//builders/java:builder.tar",
    rundir = ".",
    testdata = "//builders/testdata/java:flex",
    versions = VERSIONS_WITH_FLEX_SUPPORT,
)

acceptance_test_argo_source(
    name = "argo_source",
    srcs = [
        "//builders/testdata/java:appengine.tgz",
        "//builders/testdata/java:functions.tgz",
    ],
    testdata = "//builders/testdata:java",
)

exports_files(["runtime.bzl"])
